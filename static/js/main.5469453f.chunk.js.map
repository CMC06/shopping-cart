{"version":3,"sources":["Components/Product.js","Components/ProductList.js","Components/Restock.js","Components/Images/trash.png","Components/CartItem.js","Components/Cart.js","Components/Checkout.js","App.js","reportWebVitals.js","index.js"],"names":["Product","item","Image","addToCart","index","Button","url","src","width","roundedCircle","type","name","onClick","cost","instock","ProductList","items","products","map","className","Restock","query","setQuery","restockProducts","setItems","onSubmit","event","console","log","preventDefault","value","onChange","target","CartItem","deleteCartItem","Card","Header","as","variant","trashIcon","alt","id","Body","country","Cart","cart","cartList","length","Checkout","total","setTotal","useEffect","handleTotal","finalCart","setFinalCart","reduce","accum","current","totalHoldTemp","e","App","useState","setCart","a","fetch","response","json","data","newItems","Container","Row","Col","filter","JSON","stringify","updatedItems","productName","forEach","newCart","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5469453f.chunk.js","sourcesContent":["const Product = ({ item, Image, addToCart, index, Button }) => {\r\n  \r\n  let n = index + 1049;\r\n  let url = \"https://picsum.photos/id/\" + n + \"/50/50\"\r\n    \r\n\r\n  return (\r\n    <li key={index}>\r\n      <Image src={url} width={50} roundedCircle></Image>\r\n      <Button type=\"submit\" name={item.name} onClick={addToCart}>\r\n        {item.name}: ${item.cost} <br />\r\n        Current Stock: {item.instock}\r\n      </Button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Product\r\n","import Product from \"./Product\"\r\n\r\nconst ProductList = ({ items, Image, addToCart, Button }) => {\r\n\r\n  let products = items.map((item, index) => {\r\n    return (<Product item={item} Image={Image} addToCart={addToCart} index={index} key={index} Button={Button} />\r\n  )});\r\n\r\n  return(\r\n    <div className=\"small-container\">\r\n      <h2>Available Products</h2>\r\n      <ul>\r\n        {products}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","const Restock = ({ query, setQuery, setItems, restockProducts }) => {\r\n\r\n  \r\n\r\n  return (\r\n    <form\r\n          onSubmit={(event) => {\r\n            restockProducts(`${query}`);\r\n            console.log(`Restock called on ${query}`);\r\n            event.preventDefault();\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(event) => setQuery(event.target.value)}\r\n          />\r\n          <button type=\"submit\">Restock Products</button>\r\n        </form>\r\n  )\r\n}\r\n\r\nexport default Restock\r\n","export default __webpack_public_path__ + \"static/media/trash.5ef06904.png\";","import trashIcon from './Images/trash.png'\r\n\r\nconst CartItem = ({ item, index, deleteCartItem, Card, Button }) => {\r\n\r\n  return (\r\n    <Card>\r\n        <Card.Header as={Button} variant=\"link\" onClick={() => deleteCartItem(index)} className=\"deleteHeader\">\r\n          <img src={trashIcon} alt=\"trash icon\" id=\"deleteIcon\" />\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {item.name} <br />\r\n          ${item.cost} from {item.country}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CartItem\r\n","import CartItem from \"./CartItem\"\r\n\r\nconst Cart = ({ cart, deleteCartItem, Card, Button}) => {\r\n\r\n  let cartList = cart.map((item, index) => {\r\n    return(\r\n    <CartItem item={item} key={index} index={index} deleteCartItem={deleteCartItem} Card={Card} Button={Button} />)\r\n  });\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <h2>Shopping Cart</h2>\r\n      {cartList.length > 0 ? cartList : <p>Your shopping cart is empty.</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","const Checkout = ({ total, setTotal, cart, Button, useEffect, finalCart, setFinalCart }) => {\r\n  \r\n  \r\n\r\n  let finalList = () => {\r\n    let totalHoldTemp = handleTotal();\r\n    // let final = cart.map((item, index) => {\r\n    //   return (\r\n    //     <div key={index} index={index}>\r\n    //       {item.name}\r\n    //     </div>\r\n    //   );\r\n    // });\r\n    // console.log(JSON.stringify(final));\r\n    setTotal(totalHoldTemp)\r\n    // setFinalCart(...final);\r\n    \r\n  };\r\n\r\n  const handleTotal = () => {\r\n    let costs = cart.map((item) => item.cost);\r\n    const reducer = (accum, current) => accum + current;\r\n    let newTotal = costs.reduce(reducer, 0);\r\n    return newTotal;\r\n  };\r\n\r\n\r\n  const handleCheckout = (e) => {\r\n    e.preventDefault();\r\n    console.log('Click');\r\n  }\r\n\r\n\r\n  useEffect(finalList, [cart])\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <h2>Checkout </h2>\r\n          <Button type=\"submit\" onClick={handleCheckout}>Checkout ${total}</Button>\r\n          \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Card, Container, Row, Col, Image, Button  } from 'react-bootstrap';\r\nimport ProductList from './Components/ProductList';\r\nimport Restock from './Components/Restock';\r\nimport Cart from './Components/Cart';\r\nimport { useState, useEffect } from 'react'\r\nimport Checkout from './Components/Checkout';\r\n\r\nfunction App() {\r\n\r\n  const [items, setItems] = useState([{name:'Apple', country:'USA', cost:3.00, instock: 10}, {name:'Beans', country:'USA', cost:2.00, instock:8}, {name:'Cabbage', country:'USA', cost:1.00, instock:4}]);\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [finalCart, setFinalCart] = useState([]);\r\n  const [query, setQuery] = useState(\"http://localhost:1337/products\");\r\n  \r\n\r\n  //function to pull product list from Strapi database\r\n  const restockProducts = async (url) => {\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n    console.log(data);\r\n    let newItems = data.map((item) => {\r\n      let { name, country, cost, instock } = item;\r\n      return { name, country, cost, instock };\r\n    });\r\n    setItems([...newItems]);\r\n  };\r\n\r\n  //useEffect to populate items list with database information\r\n  useEffect(()=>{\r\n    restockProducts(\"http://localhost:1337/products\");\r\n  }, [])\r\n\r\n  //add to cart function deducts item from item instock state object\r\n  const addToCart = (e) => {\r\n    e.preventDefault();\r\n    let name = e.target.name;\r\n    let item = items.filter((item) => item.name === name);\r\n    console.log(`add to Cart ${JSON.stringify(item)}`);\r\n    if(item[0].instock <= 0) return;\r\n    let updatedItems = items.map((item) => {\r\n      if(e.target.name === item.name) {\r\n        item.instock = item.instock - 1;\r\n      }\r\n      return item;\r\n    });\r\n    console.log(JSON.stringify(updatedItems));\r\n    setCart([...cart, ...item]);\r\n    //doFetch(query);\r\n  };\r\n\r\n  //delete items from the cart, adds item back to item instock state object\r\n  const deleteCartItem = (index) => {\r\n    let productName = cart[index].name;\r\n    let updatedProducts = [...items]; \r\n    updatedProducts.forEach((item) => {\r\n      if(productName === item.name){\r\n        item.instock = item.instock + 1;\r\n      }\r\n    });\r\n    \r\n    let newCart = cart.filter((item, i) => index !== i);\r\n    setCart(newCart);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Shopping Cart Exercise</h1>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <ProductList items={items} Image={Image} addToCart={addToCart} Button={Button} />\r\n          </Col>\r\n          <Col>\r\n            <Cart cart={cart} deleteCartItem={deleteCartItem} Card={Card} Button={Button} />\r\n          </Col>\r\n          <Col>\r\n            <Checkout cart={cart} total={total} setTotal={setTotal} finalCart={finalCart} setFinalCart={setFinalCart} Button={Button} useEffect={useEffect} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Restock query={query} setQuery={setQuery} setItems={setItems} restockProducts={restockProducts} />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}